#+TITLE: emacs-vdot.el
#+AUTHOR: Matti Uusitalo
* emacs-vdot.el
Functions to help calculate optimal training paces for running. I
adapted this from Jack Daniels - Daniels' Running Formula.
* State of project
Experimental hobby project. Expect breakage and backwards incompatible changes.
* Theoretical basis
On average, the effort level a runner can sustain for a given duration
is a certain percentage of their *VOMax* (maximal oxygen
consumption). Therefore, based on the duration of a test effort the
percentage of their VOMax can be estimated.

The pace reached in the test effot can be used as basis to estimate
their oxygen consumption *VO2*.

Combining these two values, the runner's pseudo VOMax can be
estimated. This is called *VDot* by Jack Daniels. What's exactly
/pseudo/ about it, then? Different runners have different levels of
running economy. Because of this, runners who measure similar VOMax in
a lab setting can perform very differently when racing. VDOT can make
comparing test efforts easier as it can be estimated from races or
test runs with different distances.

Knowing a runner's VDOT makes it easier to prescribe optimal training
paces for them. Here the coache's experience comes into play. These
numbers should not be used blindly. We know that different runners
perform better over short distances while others thrive running the
marathon. These individual differences mut be taken into account when
coaching.
* Predicting race results
Once *VDot* is known, we can predict race results. The tricky bit when
predicting race results is that given a speed the race will take a
shorter or longer time. How long the race takes determines how big a
percentage of *VOMax* can be recruited. That in turn determines the
speed.
* Usage
** Find out your VDOT.

 #+BEGIN_SRC elisp :exports both
 (let* ((distance 10000)
        (minutes 35)
        (seconds 45))
   (vdot-VDot distance (+ (* 60 minutes) seconds)))
 #+END_SRC

 #+RESULTS:
 : 59.241924017008316

** Find out your pace at threshold (about 0.85 % of your VDot)
   Results are in seconds / 1000 meters
 #+BEGIN_SRC elisp :exports both
(let* ((vdot 60)
       (threshold 0.85))
  (vdot-pace-at-effort threshold vdot))
 #+END_SRC

 #+RESULTS:
 : 226

** Predict a 5000 meter performance from your VDOT
   #+BEGIN_SRC elisp :exports both
   (let* ((vdot 60)
          (distance 5000))
     (vdot-seconds-to-string
       (vdot-predict-performance vdot distance)))
   #+END_SRC

   #+RESULTS:
   : 17'02
